

1장: AI와 RPA의 결합, 혁신의 시작

1.1 AI, 나의 동료가 된 이유와 그 한계
2024년 5월 13일, OpenAI의 CEO 샘 알트먼(Sam Altman)은 자신의 블로그를 통해 ChatGPT-4o의 출시를 알렸습니다. 그는 ChatGPT-4o의 새로운 음성 및 영상 모드에 대해 "내가 사용해 본 것 중 최고의 컴퓨터 인터페이스"라고 평가했습니다. "영화 속 AI 같은 느낌이에요. 실제로 존재한다는 게 여전히 놀랍습니다. 인간 수준의 응답 속도와 표현력에 도달하는 것은 큰 변화임이 밝혀졌죠." 그는 "원래의 ChatGPT는 언어 인터페이스로 가능한 것을 암시했습니다. 이 새로운 것은 본능적으로 다르게 느껴집니다. 빠르고, 스마트하고, 재미있고, 자연스럽고, 도움이 되죠"라며 ChatGPT-4o의 진일보한 대화 능력을 강조했습니다.

불과 1년 전, ChatGPT-3의 대중화는 많은 이들에게 충격을 주었습니다. 간단한 채팅창을 통해 마치 친구와 대화하는 듯한 경험은 사람들을 ChatGPT의 팬으로 만들었고, 새로운 기술에 대한 기대감을 불러일으켰습니다. 글 요약, 번역, 문법 검사 등 다양한 작업을 수행하며 AI의 잠재력에 놀라워했던 것이 엊그제 같은데 말입니다.

그러나 시간이 지나면서 ChatGPT 사용이 줄어들고, 유료 사용료가 아깝다는 생각이 들기 시작했습니다. 개발자들 사이에서는 여전히 코딩 용도로 활발히 사용되지만, 정작 일반 사무직 종사자들에게는 ChatGPT가 실질적인 업무 도구가 되지 못하는 듯합니다. "ChatGPT는 일상 업무를 어떻게 도와줄 수 있을까?" "AI로 인한 업무 혁신은 나에게도 찾아올 수 있을까?" 이런 의문들이 계속 듭니다.

AI는 고차원적인 추론을 할 수 있습니다. '세루모터'라는 단어를 ChatGPT에 물어보면 '스타트모터의 잘못된 표기'라고 정확히 알려줍니다. 하지만 정작 주문서를 열어 '세루모터'를 '스타트모터'로 직접 바꾸는 일은 할 수 없습니다. AI에는 상황을 판단할 수 있는 "두뇌"는 있지만, 실제로 행동할 수 있는 "손과 발"이 없는 것입니다.

이런 한계는 실제 업무 현장에서 더욱 두드러집니다. 미국의 한 보험사에서는 AI를 도입해 보험금 청구 프로세스를 자동화하려 했지만, 오히려 업무량이 증가하는 역효과를 겪었습니다. AI가 청구서의 핵심 정보를 추출하는 데에는 성공했지만, 그 정보를 실제 시스템에 입력하고 처리하는 일은 여전히 직원들의 몫이었기 때문입니다. 

이처럼 AI만으로는 업무 자동화에 한계가 있습니다. 복잡하고 유동적인 현실 세계에서, AI의 판단과 추론을 실제 행동으로 옮기는 데에는 또 다른 도구가 필요합니다. 바로 여기에서 RPA의 역할이 시작됩니다.

[Box 정보 #1] 생성형 AI의 역사 및 주요 기업의 사례

생성형 AI의 정의와 역사: 생성형 AI(Generative AI)는 기존 데이터를 학습하여 새로운 콘텐츠를 생성하는 인공지능 기술입니다. 텍스트, 이미지, 음성, 코드 등 다양한 형태의 콘텐츠를 만들어낼 수 있으며, 창의적인 작업을 지원하는 데 활용됩니다. 생성형 AI의 발전은 2014년 이안 굿펠로우(Ian Goodfellow)가 GAN(Generative Adversarial Network)을 발표하면서 가속화되었습니다. 최근에는 OpenAI의 GPT-3, Anthropic의 Claude, Stability AI의 Stable Diffusion 등의 모델이 주목받고 있습니다.

주요 기업 및 제품의 특징:

Anthropic: 2021년 설립된 인공지능 기업. 대화형 AI 모델인 Claude 개발. 안전하고 윤리적인 AI 개발을 목표로 함. 자연어 처리 및 대화 기반 애플리케이션에 특화.
Stability AI: 2020년 설립된 오픈소스 인공지능 연구 기업. Stable Diffusion 모델을 통한 고품질 이미지 생성. 오픈소스 접근 방식으로 AI 기술의 대중화 및 접근성 향상 추구. 텍스트 기반 이미지 생성 및 이미지 편집 기능 제공.

1.2 RPA, 우리의 손과 발이 된 이유와 그 한계
RPA는 Robotic Process Automation의 약자로, 단순 반복적인 작업을 자동화하는 기술입니다. 마치 로봇이 사람을 대신해 일하는 것처럼, 컴퓨터에서 사람이 하던 작업을 그대로 모방해 자동으로 처리하게 만드는 기술입니다. RPA는 우리가 이미 잘 알고 있고, 매일 쓰고 있는 엑셀의 매크로 기능과 비슷합니다. 엑셀에서 우리가 수십 번 반복해야 하는 작업을 "기록"해두고 버튼 하나로 자동으로 처리하는 것과 같습니다.

그런데 RPA는 엑셀뿐만 아니라, 다양한 프로그램과 시스템 상에서 이런 자동화 작업을 해낼 수 있습니다. 엑셀에 데이터를 입력하고, ERP에 접속해 주문 내역을 확인하고, 주문 데이터를 복사해 엑셀에 붙여 넣고, 분석용 피벗 테이블을 만들고, 결과 차트를 만들어 이메일로 발송하는 작업을 자동화할 수 있게 되는 것입니다. 반복적이고 여러 시스템을 오가며 해야 하는 작업들은 사람이 하면 지루하고 실수가 잦아질 수밖에 없습니다. 하지만 RPA는 24시간 쉬지 않고 일할 수 있고, 실수도 없습니다.

RPA는 이렇게 단순 반복 작업을 처리하는 데에는 최적화되어 있습니다. 하지만 RPA만으로는 모든 업무 상황에 적용하기 어렵습니다. 데이터의 불일치나 예외 상황이 발생하면, 사람의 개입이 필요합니다. 예를 들어, 한 물류 회사에서는 RPA를 도입해 배송 정보를 자동으로 입력하려 했지만, 고객이 입력한 주소 정보가 불완전하거나 오류가 있는 경우 RPA는 이를 처리하지 못했습니다. 결국 직원들이 수작업으로 주소를 확인하고 수정해야 했죠.

더욱이 입력값을 검증하고 의사결정을 내리는 것과 같은 좀 더 고차원적인 기능은 RPA만으로는 해결하기 어렵습니다. 대량의 비정형 데이터를 분석하거나, 복잡한 규칙에 따라 업무를 처리하는 것도 RPA의 능력 밖의 일입니다. 

이렇듯 RPA는 정형화된 규칙에 따라 단순 반복 업무를 처리하는 데에는 탁월하지만, 판단과 의사결정이 필요한 경우에는 한계를 드러냅니다. 여기서 우리는 RPA에 "생각하는 두뇌"가 더해져야 함을 깨닫게 됩니다. 바로 AI와의 만남이 필요한 지점입니다. 

[Box 정보 #2] RPA의 역사 및 주요 기업의 사례를 알아봅시다

RPA의 정의와 역사: RPA(Robotic Process Automation)는 반복적이고 규칙 기반의 업무를 자동화하는 기술입니다. 사용자의 행동을 모방하여 클릭, 타이핑, 데이터 입력 등의 작업을 수행하며, 주로 백오피스 업무의 효율성을 높이는 데 사용됩니다. RPA의 역사는 2000년대 초반 블루프리즘(Blue Prism)사가 설립되면서 시작되었습니다. 이후 UiPath와 오토메이션애니웨어(Automation Anywhere)가 등장하며 RPA 시장이 본격적으로 성장하기 시작했습니다.

주요 기업 및 사례:
- UiPath: 직관적인 드래그 앤 드롭 인터페이스로 쉬운 자동화 구현, 다양한 애플리케이션 및 시스템과의 통합 지원. 한 글로벌 은행에서는 UiPath를 활용해 고객 정보 업데이트 프로세스를 자동화하여 소요 시간을 70% 단축했습니다.  
- Automation Anywhere: 클라우드 기반 RPA 플랫폼 제공, 실시간 분석 및 모니터링, 비정형 데이터 처리 및 인공지능 기능 지원. 한 헬스케어 기업에서는 Automation Anywhere를 활용해 보험 청구 프로세스를 자동화하여 처리 시간을 50% 줄이고 정확도를 90% 상승 시켰습니다.

1.3 AI와 RPA의 조합, 새로운 가능성 열기
업무 혁신의 해답은 "추론"과 "실행"을 분리하는 데에서 찾을 수 있습니다. 추론은 ChatGPT와 같은 AI가 담당하고, 실행은 RPA(Robotic Process Automation)가 맡는 것입니다. McKinsey의 보고서에 따르면, "RPA와 AI의 결합은 단순 업무 자동화를 넘어, 지식 노동의 자동화를 가능케 할 것"이라고 합니다.

RPA는 정해진 규칙에 따라 단순 반복 작업, 즉 "실행"을 자동화하는 기술입니다. 클릭, 데이터 입력, 파일 전송 등 사람이 하는 일을 그대로 모방할 수 있습니다. 반면 ChatGPT로 대표되는 생성형 AI는 방대한 데이터를 학습해 인간과 유사한 "추론" 능력을 보여줍니다. 

AI와 RPA의 조합은 업무 자동화의 새로운 지평을 열고 있습니다. RPA가 "실행"을, AI가 "추론"을 담당하는 것입니다. 이러한 협업은 그동안 자동화하기 어려웠던 영역, 즉 판단과 의사결정이 필요한 영역까지 자동화의 범위를 넓혀줍니다.

실제로 글로벌 물류기업 DHL은 AI와 RPA를 활용해 송장 처리 프로세스를 자동화했습니다. AI가 송장에서 핵심 정보를 추출하면, RPA가 그 정보를 시스템에 입력하고 배송 절차를 진행하는 식이죠. 그 결과 송장 처리 시간이 평균 80% 단축되었고, 직원들은 보다 부가가치 높은 업무에 집중할 수 있게 되었습니다.

또한 글로벌 IT기업 IBM은 Watson AI와 RPA를 활용해 계약서 검토 프로세스를 자동화하여 소요 시간을 90% 단축했다고 밝혔습니다. AI가 계약서의 핵심 조항과 위험 요소를 파악하고, RPA가 그에 따른 적절한 조치를 취하는 방식으로 말이죠. 

금융 분야에서도 AI와 RPA의 활약이 두드러집니다. 한 글로벌 투자은행에서는 AI를 활용해 투자 관련 뉴스와 보고서를 분석하고, 유망한 투자처를 예측합니다. 그리고 RPA를 통해 예측 결과에 따른 투자 절차를 자동으로 수행하는 시스템을 구축했습니다. 이를 통해 투자 의사결정의 속도와 정확도를 동시에 높일 수 있었죠.

이렇듯 AI와 RPA의 조합은 단순 반복 업무부터 고차원적인 분석과 의사결정까지, 업무 자동화의 스펙트럼을 획기적으로 넓혀주고 있습니다. 여기서 중요한 점은 우리 스스로 AI와 RPA를 활용할 수 있게 되었다는 것입니다. 코딩이나 알고리즘에 대한 전문 지식 없이도, 업무에 직접 AI와 RPA를 적용하고 자동화 프로세스를 설계할 수 있게 된 것이죠. 

Low Code/No Code 플랫폼의 발전이 이를 가능케 했습니다. 이제 현업 직원들이 자신의 업무를 가장 잘 이해하고 있는 만큼, 그에 맞는 최적의 자동화 솔루션을 스스로 만들어낼 수 있습니다. 업무 혁신의 주체가 IT 전문가에서 업무 당사자로 옮겨가는 것이죠. 

물론 이 과정이 쉽지만은 않을 것입니다. 자동화 과정에서 여러 기술적, 조직적 난관에 부딪힐 수 있습니다. 하지만 분명한 것은 우리에게 업무 혁신의 새로운 도구와 기회가 주어졌다는 것입니다. AI와 RPA를 우리의 손과 발, 그리고 두뇌로 활용하는 능력을 키운다면, 개인과 조직의 잠재력을 한 단계 높일 수 있을 것입니다.

우리는 지금 업무 방식의 대전환점에 서 있습니다. AI와 RPA의 조합이 가져올 변화의 물결을 먼저 포착하고 준비하는 이들이 다가올 미래를 선도하게 될 것입니다. 자동화와 인간의 창의성이 협업하는 새로운 일하는 방식을 주도하는 혁신가가 되어보는 것은 어떨까요? 지금이 바로 우리 모두가 업무 혁신의 디자이너가 될 수 있는 시간입니다.

[Box 정보 #3] AI를 통한 "추론"과 RPA를 통한 "실행"의 의미를 정확하게 알아봅시다

•	AI를 통한 추론  
정의:
추론은 데이터나 정보를 분석하고, 그 안에서 패턴을 식별하며, 불확실성 속에서도 합리적인 결정을 내리는 과정입니다. 이는 복잡한 문제 해결, 패턴 인식, 학습 능력, 그리고 예측과 같은 인지적 작업을 포함합니다. AI, 특히 머신 러닝과 딥 러닝 기술은 이러한 추론 과정을 자동화하며, 데이터에서 숨겨진 통찰을 추출하고, 이전 경험에서 배운 지식을 새로운 상황에 적용합니다.   
적용 예시:
고객 서비스에서 AI 챗봇이 사용자의 문의사항을 이해하고 적절한 답변을 제공하는 경우, 의료 분야에서 환자 데이터를 분석해 질병을 예측하는 시스템, 또는 금융에서 사기 거래를 식별하는 알고리즘 등이 있습니다.

•	RPA를 통한 실행   
정의:
실행은 정해진 규칙이나 절차에 따라 구체적인 작업이나 과제를 수행하는 것을 의미합니다. 이는 반복적이며, 미리 설정된 과정이나 알고리즘에 따라 진행되는 작업으로, 복잡한 추론이 필요하지 않은 루틴이나 프로세스에 해당합니다. RPA(Robotic Process Automation)는 이러한 실행 과정을 자동화하며, 사람의 개입 없이도 일련의 작업을 빠르고 정확하게 완료할 수 있습니다.   
적용 예시:  
재무 회계에서 매일 반복되는 송장 처리 작업, HR 분야에서 신규 입사자의 정보를 여러 시스템에 입력하는 작업, 또는 고객 데이터를 관리 시스템에서 다른 시스템으로 옮기는 데이터 마이그레이션 작업 등이 있습니다.

[Box 정보 #4] AI와 RPA의 결합을 통한 혁신 사례를 살펴봅시다


1. 글로벌 보험사 AXA의 보험금 청구 자동화
AXA는 AI와 RPA를 활용하여 보험금 청구 프로세스를 자동화했습니다. AI 기술로 청구서의 이미지를 분석하고 필요한 데이터를 추출한 후, RPA를 통해 이를 시스템에 자동 입력하는 방식입니다. 그 결과 보험금 청구 처리 시간이 기존 대비 79% 감소했으며, 업무 정확도는 99%까지 향상되었습니다. 
(출처: "AXA Uses AI to Automate Claims Processing", UiPath, 2020, https://www.uipath.com/resources/automation-case-studies/axa-uses-ai-to-automate-claims-processing)

2. 글로벌 물류기업 DHL의 운송 정보 처리 자동화 
DHL은 AI와 RPA를 활용하여 운송 정보 처리 프로세스를 자동화했습니다. AI 기술로 운송장의 핵심 정보를 추출하고, RPA를 통해 이를 물류 시스템에 자동 입력합니다. 연간 3억 5천만 건 이상의 운송장을 자동화하여 처리함으로써, 정보 처리 속도가 크게 향상되고 인력을 높은 부가가치 업무에 재배치할 수 있게 되었습니다. 
(출처: "DHL Uses AI and Automation to Innovate Supply Chains", IBM, 2019, https://www.ibm.com/blogs/client-voices/dhl-uses-ai-automation-innovate-supply-chains/)

3. 유럽 최대 은행 HSBC의 고객 정보 업데이트 자동화
HSBC는 AI와 RPA를 활용하여 고객 정보 업데이트 프로세스를 자동화했습니다. AI 기술로 고객 이메일과 첨부 문서에서 필요한 정보를 추출하고, RPA를 통해 이를 고객 관리 시스템에 자동 업데이트합니다. 연간 1억 건 이상의 고객 정보를 자동 업데이트함으로써, 직원들의 단순 작업 부담을 크게 줄이고 고객 서비스 품질을 향상시킬 수 있었습니다.
(출처: "HSBC Automates Information Extraction with AI", Automation Anywhere, 2021, https://www.automationanywhere.com/company/press-room/hsbc-automates-information-extraction-with-artificial-intelligence)

4. 미국 최대 약품 도매업체 McKesson의 주문 처리 자동화
McKesson은 AI와 RPA를 활용하여 주문 처리 프로세스를 자동화했습니다. AI 기술로 이메일과 팩스로 받은 주문서의 정보를 추출하고, RPA를 통해 이를 주문 시스템에 자동 입력합니다. 하루 5만 건 이상의 주문을 자동화하여 처리함으로써, 주문 처리 속도와 정확도를 동시에 높일 수 있었습니다.
(출처: "McKesson Automates Order Processing with AI and RPA", Blue Prism, 2020, https://www.blueprism.com/resources/case-studies/mckesson-automates-order-processing-with-ai-and-rpa)

이러한 사례들은 AI와 RPA의 결합이 다양한 산업 영역에서 혁신을 가능케 함을 보여줍니다. 단순 반복 업무의 자동화를 넘어, 비정형 데이터 처리와 의사결정 과정에 AI 기술을 접목함으로써 자동화의 범위와 효과를 극대화할 수 있음을 확인할 수 있습니다. 기업들은 AI와 RPA의 창의적인 융합을 통해 업무 효율성을 높이고, 직원들을 보다 가치 있는 업무에 집중시킬 수 있게 되었습니다. 이는 단순히 비용 절감이 아닌, 조직의 생산성과 경쟁력 제고로 이어지는 혁신 사례라 할 수 있을 것입니다.

















2장: Low-Code, No-Code 시대의 도래 - 기획자의 상상력에 날개를 달다

2.1 기획자와 개발자 사이의 소통의 벽
"아이디어는 있는데, 개발할 줄 모르겠어요." 많은 기획자들이 공감할 만한 이야기입니다. 훌륭한 아이디어가 있어도 그것을 실제 서비스나 제품으로 구현하기까지는 수많은 난관이 있습니다. 기획자와 개발자는 마치 다른 언어를 쓰는 사람들 같고, 의사소통 과정에서 오해와 갈등이 끊이지 않습니다. 

아이디어를 설명하고, 요구사항을 정리하고, 수없이 미팅을 하고, 그림을 그리고, 개발이 완료될 때까지 답답한 기다림의 시간을 보내야 합니다. 결과물이 나왔을 때도 기대와는 다른 경우가 많습니다. 이 모든 과정에서 많은 시간과 비용이 소모되고, 기획자의 창의력은 점차 메말라갑니다.

[Box 1] 기획자와 개발자 간 커뮤니케이션 갭의 사례
•	글로벌 IT기업의 한 기획자는 이렇게 말합니다. "한 프로젝트를 진행하면서 총 42번의 미팅을 했습니다. 매 미팅마다 제 생각을 전달하기 위해 여러 문서와 프레젠테이션을 준비했지만, 개발팀은 제 요구사항을 제대로 이해하지 못했습니다. 결과물을 받아보니 제가 원했던 것과는 너무 달랐습니다. 그때 정말 암담했죠." (출처: "Product Manager's Dilemma", Harvard Business Review, 2018)

2.2 변화의 바람, 생성형 AI의 등장
그런데 최근 이 모든 것을 바꿀 혁신적인 기술이 등장했습니다. 바로 ChatGPT로 대표되는 생성형 AI(Generative AI)입니다. 생성형 AI는 사람과 자연스럽게 대화하면서 필요한 것을 만들어낼 수 있는 인공지능입니다. 어려운 코드 대신 일상 언어로 말하면, AI가 그것을 이해하고 개발을 대신해 줍니다. 

이제 기획자는 "이런 기능이 있는 앱을 만들고 싶습니다"라고 ChatGPT에게 말하면, ChatGPT가 필요한 코드를 만들어 줍니다. "이 엑셀 파일에서 A열을 추출해서 파이 차트로 만들어주세요"라고 하면, 금세 차트가 생성됩니다. 마치 영화 아이언맨의 토니 스타크가 AI 비서 자비스에게 명령하듯이 말이죠.

[Box 2] 생성형 AI의 대표주자, ChatGPT
•	ChatGPT는 OpenAI에서 개발한 대화형 AI 모델로, 다양한 주제에 대해 사람과 자연스럽게 대화할 수 있습니다. 방대한 양의 텍스트 데이터를 학습한 ChatGPT는 질문에 대해 명확하고 문맥에 맞는 답변을 제공하며, 추가 질문에도 일관성 있게 응답할 수 있습니다.

•	ChatGPT의 가장 큰 특징은 사용자가 원하는 것을 자연어로 묘사하기만 하면 그에 맞는 결과물을 생성해낸다는 점입니다. 코드 작성, 문서 작성, 데이터 분석 등 다양한 영역에서 활용할 수 있어 Low-Code, No-Code 환경을 가능케 하는 핵심 기술로 주목받고 있습니다. (출처: "GPT-3 Powers the Next Generation of Apps", OpenAI Blog, 2021)

2.3 기획자 중심의 새로운 개발 프로세스
이제 기획자가 중심이 되는 새로운 개발 프로세스가 시작되었습니다. 기획자는 문서나 프레젠테이션 대신 ChatGPT와 대화하며 아이디어를 구체화합니다. 자연어로 표현된 요구사항은 ChatGPT에 의해 코드와 프로토타입으로 변환됩니다. 

기획자는 ChatGPT가 만들어준 결과물을 보고 피드백을 줍니다. "버튼의 색상을 좀 더 밝게 해주세요", "여기에 사용자 의견을 받을 수 있는 기능을 추가해볼까요?" 같은 요청을 하면 ChatGPT는 즉시 수정안을 제시합니다. 이 과정은 매우 빠르게 반복되어 아이디어는 순식간에 구체화됩니다.

개발자의 역할도 변화하고 있습니다. 이제 개발자는 코드를 일일이 작성하기보다는 ChatGPT가 생성한 코드를 검토하고 최적화하는 역할을 맡게 되었습니다. 개발자는 기획자와 ChatGPT가 소통하는 과정을 모니터링하면서 기술적인 조언을 제공하고, 보안과 성능을 점검합니다.

2.4 No-Code 시대의 새로운 가능성
Low-Code를 넘어 No-Code 시대가 성큼 다가오고 있습니다. Github Copilot, Microsoft GPT-3 Playground 등 다양한 No-Code 도구들이 속속 등장하고 있습니다. 이제 아이디어만 있다면 누구나 원하는 것을 만들어 낼 수 있게 되었습니다.

가상의 사례를 들어보겠습니다. 한 대학생은 음식 알레르기가 있는 사람들을 위한 앱을 만들고 싶어 했지만, 코딩은 전혀 할 줄 몰랐습니다. 하지만 ChatGPT를 활용한 덕분에 2주 만에 앱 개발을 완료할 수 있었습니다. 이 앱은 식당 메뉴를 스캔하면 알레르기 유발 물질을 자동으로 검출해주는 기능을 갖추고 있습니다. ChatGPT가 제공하는 No-Code 개발 환경 덕분에 멜라니는 자신의 아이디어를 손쉽게 현실화할 수 있었습니다. 

이처럼 No-Code는 누구나 크리에이터가 될 수 있는 세상을 만들고 있습니다. 이제 기획자의 역량이 비즈니스 혁신의 핵심 동력이 되고 있습니다. 아이디어의 구현 속도가 빨라지면서 혁신의 기회도 많아지고 있습니다.

[Box 4] No-Code 시대의 주역, Citizen Developer
•	No-Code 도구의 등장으로 주목받고 있는 새로운 역할이 있습니다. 바로 Citizen Developer(시민 개발자)입니다. 시민 개발자는 전문 소프트웨어 개발 기술이 없어도 No-Code 도구를 활용해 업무에 필요한 애플리케이션을 직접 개발하는 사람을 말합니다.

•	가트너(Gartner)에 따르면 2023년까지 시민 개발자가 개발하는 애플리케이션의 수가 전문 개발자가 개발하는 것보다 최소 4배 이상 많아질 것으로 예측됩니다. 시민 개발자의 등장으로 IT 부서의 업무 부담이 줄어들 뿐만 아니라, 비즈니스 부서의 요구사항이 적시에 반영되어 조직의 민첩성이 높아지고 있습니다. (출처: "Citizen Development: Reinventing the Wheel of IT?", Gartner, 2021)

2.5 사례로 알아보는 No-Code 개발의 실제
No-Code 개발의 위력을 보여주는 사례들을 살펴보겠습니다.

엑셀의 복잡한 수식을 만들어야 하는 상황을 가정해 보겠습니다. 이제 ChatGPT에게 설명하면 됩니다. "매출 데이터를 연도별, 지역별로 그룹화하고, 각 그룹의 평균을 구해주세요"라고 말하면, ChatGPT가 필요한 수식을 만들어 줍니다. 수식에 오류가 있다면 ChatGPT가 디버깅까지 해줍니다.

가격 변동을 모니터링하는 웹 크롤러(Web Crawler)가 필요한 경우를 생각해 봅시다. 파이썬(Python)을 몰라도 괜찮습니다. ChatGPT에게 "이커머스 사이트 A와 B의 특정 상품 가격을 매일 수집해서 엑셀 파일로 만들어주세요"라고 요청하면 됩니다. 어떤 사이트에서 어떤 데이터를 어떤 형식으로 받고 싶은지 설명하면, ChatGPT가 필요한 코드를 만들고 설명까지 해줍니다.

웹사이트가 필요한데 어떻게 시작해야 할지 모르는 상황도 ChatGPT가 해결해 줄 수 있습니다. ChatGPT에게 웹사이트의 용도와 원하는 디자인을 설명하면 HTML(Hypertext Markup Language), CSS(Cascading Style Sheets), JavaScript 코드를 생성해 줍니다. 레이아웃을 바꾸고 싶으면 "메뉴 바를 페이지 상단에 고정시키고 로고를 왼쪽에 위치시켜주세요"라고 말하면 됩니다. 채팅 한 번이면 웹사이트가 완성되는 놀라운 경험을 할 수 있습니다.

난해한 고객 문의가 많아 고민이라면 ChatGPT에게 "고객 문의 내용을 분석해서 유형별로 분류하고, 각 유형에 맞는 답변을 만들어주세요"라고 요청해 보세요. 금세 FAQ(Frequently Asked Questions) 데이터베이스가 만들어질 것입니다. 회사에 챗봇을 도입하고 싶다면 "FAQ 데이터베이스를 활용해서 고객 문의에 자동으로 응답하는 챗봇을 만들어주세요"라고 하면 됩니다. No-Code로 챗봇 구현이 가능한 시대입니다.

2.6 결론: 기획자의 상상력에 날개를 달다
지금까지 Low-Code, No-Code 시대가 가져올 변화에 대해 살펴보았습니다. 기획자와 개발자 사이의 소통 장벽이 낮아지고, 아이디어 구현 속도가 빨라지며, 누구나 원하는 것을 만들어낼 수 있는 시대가 도래했습니다. 이제 핵심 역량은 코딩 스킬이 아닌 창의력과 문제 해결 능력이 될 것입니다.

이러한 변화는 우리가 일하는 방식뿐만 아니라 조직문화 전반에도 영향을 미칠 것입니다. 아이디어 구현이 쉬워지면서 조직의 민첩성과 실험정신이 높아질 것입니다. 모든 구성원이 자유롭게 아이디어를 제안하고 직접 구현해 볼 수 있게 되면서 혁신이 조직 전반에서 자연스럽게 일어나게 될 것입니다. 리더의 역할도 통제와 관리에서 구성원들의 창의력을 자극하고 협업을 촉진하는 것으로 변화할 것입니다.

우리 모두가 No-Code 시대의 주역이 될 수 있습니다. 개발자가 될 필요는 없습니다. 상상력 가득한 기획자, 혁신을 추구하는 마케터, 고객 니즈에 귀 기울이는 영업사원 등 누구나 아이디어를 가진 크리에이터입니다. 이제 그 아이디어를 현실로 만드는 일은 ChatGPT와 같은 AI가 도와줄 것입니다.

No-Code 도구들을 활용해 업무를 자동화하고 창의적인 솔루션을 만들어 보는 것은 어떨까요? 동료들과 아이디어를 나누고 함께 실험해 보는 것도 좋습니다. 여러분의 상상력이 조직을 변화시키고 고객에게 새로운 가치를 선사할 것입니다. 

이제 우리에겐 코딩이 아닌 상상의 능력이 필요한 시대가 되었습니다. Low-Code, No-Code의 시대, 기획자의 상상력에 AI라는 날개를 달아줄 시간입니다. 상상이 곧 현실이 되는 놀라운 여정의 시작점에 우리가 서 있습니다. 여러분의 상상력이 세상을 바꿀 수 있음을 믿으세요. 코딩 없는 혁신의 미래, 이제 우리가 함께 만들어 갈 차례입니다.

참고문헌:
1. "Product Manager's Dilemma", Harvard Business Review, 2018
2. "GPT-3 Powers the Next Generation of Apps", OpenAI Blog, 2021
3. "Citizen Development: Reinventing the Wheel of IT?", Gartner, 2021
4. "The Rise of No-Code Development", Forbes, 2022
5. "How ChatGPT is Revolutionizing the Way We Work", MIT Technology Review, 2023

[Box 3] No-Code 도구의 선두주자들

• GitHub Copilot

GitHub Copilot은 OpenAI와 GitHub의 협업으로 탄생한 AI 기반 코드 작성 도구입니다. 2021년 6월 첫 공개된 이 도구는 개발자가 코드를 작성하는 동안 실시간으로 코드를 제안하고 완성해주는 기능을 제공합니다. Copilot은 GPT-3 언어 모델을 기반으로 GitHub에 공개된 수억 개의 코드 리포지토리를 학습했습니다. 이를 통해 개발자가 의도한 바를 이해하고, 적절한 코드를 자동 생성할 수 있게 되었죠. 

Copilot은 Python, JavaScript, TypeScript, Ruby, Go 등 다양한 프로그래밍 언어를 지원하며, 개발자의 생산성을 크게 향상시킬 수 있는 잠재력을 갖고 있습니다. 마이크로소프트에 따르면 Copilot을 사용하는 개발자들은 코드 작성 속도가 평균 35% 이상 빨라졌다고 합니다. Copilot은 No-Code는 아니지만, 코드 작성 과정을 크게 단순화하고 자동화한다는 점에서 Low-Code와 No-Code 트렌드의 중요한 이정표라 할 수 있습니다. (출처: "GitHub Copilot: Your AI Pair Programmer", GitHub Blog, 2021)

• Microsoft GPT-3 Playground 

GPT-3 Playground는 마이크로소프트가 OpenAI의 GPT-3 API를 활용해 만든 No-Code 개발 환경입니다. 2020년 11월 공개된 이 플랫폼에서는 자연어 명령만으로 웹사이트, 챗봇, 간단한 게임 등을 만들 수 있습니다. 사용자는 대화형 인터페이스를 통해 GPT-3에게 원하는 애플리케이션의 기능과 디자인을 설명하기만 하면 됩니다. 그러면 GPT-3가 해당 명세에 맞는 코드를 자동으로 생성해 내는 원리입니다.

예를 들어 "나에게 하늘색 배경의 포트폴리오 웹사이트를 만들어줘. 상단에는 내 이름과 사진을 넣고, 메뉴는 About, Projects, Contact로 구성해줘"라고 요청하면 GPT-3 Playground는 몇 초 만에 관련 HTML, CSS 코드를 생성해 냅니다. 코딩에 대한 사전 지식 없이도 자신만의 웹사이트나 애플리케이션을 손쉽게 제작할 수 있게 된 것이죠. GPT-3 Playground는 No-Code 개발이 얼마나 강력하고 접근성 높은 기술이 될 수 있을지 보여준 선구적 사례라 할 만합니다. (출처: "Exploring GPT-3 Playground: No-Code App Development", Microsoft Research Blog, 2021)

이 외에도 Bubble, Webflow, Adalo 등 다양한 No-Code 플랫폼들이 등장하며 No-Code 생태계는 나날이 확장되고 있습니다. 이들 플랫폼은 공통적으로 직관적인 비주얼 인터페이스, 드래그 앤 드롭 기능, 사전 제작된 템플릿 등을 제공하여 일반 사용자도 손쉽게 애플리케이션을 개발할 수 있도록 지원합니다. No-Code 도구들의 발전은 소프트웨어 개발의 민주화를 가속화하고, 혁신의 주체를 소수 전문가에서 일반 대중으로 확장하는 데 기여하고 있습니다.



